State الحالة
\**/
وعاء يحمل المعلومات المشتركة خلال شغل العميل والأداة؛
يوفر طريقة منظمة لتسجيل تاريخ المحادثة؛ مشاركة البيانات بين الأدوات وتخزين النتائج
غير النهائية أثناء عمل العميل

- عند بناء عملاء يحتاجون لما يربو عن أداة؛ تحتاج هذه الأدوات غالبا الى التواصل وتبادل
المعلومات بين بعضها البعض؛ الحالة تحل هذه المشكلة فيتم التعامل معها كقناة الاتصال
ومخزن المعلومات بين هؤلاء العملاء وبعضهم البعض؛ افأحدهم يكتب فيها والاخر يقرأ منها
فمثلا قد تأتي أحد الأدوات بالمعلومة بينما تقوم الأخرى بتوليد رد النموذج

الحالة تكون مصممة بناء على schema يتم فيها تحديد القيم المسجلة بداخلها ونوعها

أنواع البيانات التي تدعمها الحالة:
الأنواع الأساسية في لغة بايثون؛ والليست؛ وال Union وإن شئت فصنع نوعا جديدا عادي
ولكن لاحظ انك لا تحتاج ان تعرف ال messages field فيها اذ يتم تعريفه تلقائيا
المنفعة من ال messages هي تخزين تاريخ المحادثة

تعريف السكيما
{
    "parameter_name": {
        "type": SomeType,  # Required: Expected Python type for this field
        "handler": Optional[Callable[[Any, Any], Any]]  # Optional: Function to merge values
    }
}
النوع بتاع المتغيرات لازم تحدده؛ لكن ال handler ممكن تكتبه وممكن لا؛ المهندل عبارة عن دالة تحدد كيف للقيم الجديدة المضافة بال set ان تندمج مع القيم الموجودة
اذا لم تحدد المهندل تقوم الحالة بتحدبده من خلال قائمة من المهندلين بناء على النوع
            if _is_list_type(definition["type"]):
                definition["handler"] = merge_lists
            else:
                definition["handler"] = replace_values
من الكود في ال state class
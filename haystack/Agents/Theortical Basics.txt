# Agent? Understand user input => retrieve relevant information => generate smart responses => perform actions (API call etc)
# Agents use LLMs
# Agent > chatbot ==> chooses tools & executes tasks & execute tasks
# Agent's four components: Brain (LLM), Tools for Interaction (Agent connects to external tools, APIs, and databases), Memory for Context (Short term and Long term), Reasoning and Planning (Breaks down complex problem makes a plan)

# Haystack agent is universal method to interact with chat-based LLMs
"""
How to build an AI agent in Haystack?
By using three main elements in a pipeline:
- Chat Generators to generate tool calls or assistant responses with an LLM
- Tool class => allows LLM to perform actions such as: calling API & running a pipeline
- Tool Invoker => To execute tool calls generated by an LLM (Delegate this task to it)
"""

"""
How to create a tool in Haystack?
- Tool class: Creates a tool representation for a consistent tool-calling across all Generators => allows for most customization => user can define its own name and description
- ComponentTool class: Wraps a Haystack component as a callable tool
- @tool decorator: Creates tools from Python functions and automatically uses their name and docstring
- Toolset: Container for grouping multiple tools that can be passed directly to Agents or Generators
"""